<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.cymall.dao.SrvMerchanclearDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="xin.cymall.entity.SrvMerchanclear" id="srvMerchanclearMap">
        <result property="id" column="id"/>
        <result property="restaurantId" column="restaurant_id"/>
        <result property="clearAmount" column="clear_amount"/>
        <result property="clearTime" column="clear_time"/>
        <result property="optrName" column="optr_name"/>
    </resultMap>

	<select id="get" resultType="xin.cymall.entity.SrvMerchanclear">
		select * from srv_merchant_clear where id = #{value}
	</select>

	<select id="getList" resultType="xin.cymall.entity.SrvMerchanclear">
		select * from srv_merchant_clear t <include refid="where_clause" />
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

 	<select id="getCount" resultType="int">
		select count(*) from srv_merchant_clear t  <include refid="where_clause" />
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="id != null and id != ''"> and t.id = #{id} </if>
    		<if test="idVague != null and idVague != ''"> and t.id like concat('%',#{idVague},'%') </if>
            <if test="restaurantId != null and restaurantId != ''"> and t.restaurant_id = #{restaurantId} </if>
    		<if test="restaurantIdVague != null and restaurantIdVague != ''"> and t.restaurant_id like concat('%',#{restaurantIdVague},'%') </if>
            <if test="clearAmount != null and clearAmount != ''"> and t.clear_amount = #{clearAmount} </if>
    		<if test="clearAmountVague != null and clearAmountVague != ''"> and t.clear_amount like concat('%',#{clearAmountVague},'%') </if>
            <if test="clearTime != null and clearTime != ''"> and t.clear_time = #{clearTime} </if>
    		<if test="clearTimeVague != null and clearTimeVague != ''"> and t.clear_time like concat('%',#{clearTimeVague},'%') </if>
            <if test="optrName != null and optrName != ''"> and t.optr_name = #{optrName} </if>
    		<if test="optrNameVague != null and optrNameVague != ''"> and t.optr_name like concat('%',#{optrNameVague},'%') </if>
        </where>
    </sql>
	 
	<insert id="save" parameterType="xin.cymall.entity.SrvMerchanclear">
		insert into srv_merchant_clear
		(
			`id`, 
			`restaurant_id`, 
			`clear_amount`, 
			`clear_time`, 
			`optr_name`
		)
		values
		(
			#{id}, 
			#{restaurantId}, 
			#{clearAmount}, 
			now(),
			#{optrName}
		)
	</insert>
	 
	<update id="update" parameterType="xin.cymall.entity.SrvMerchanclear">
		update srv_merchant_clear 
		<set>
			<if test="restaurantId != null">`restaurant_id` = #{restaurantId}, </if>
			<if test="clearAmount != null">`clear_amount` = #{clearAmount}, </if>
			<if test="clearTime != null">`clear_time` = #{clearTime}, </if>
			<if test="optrName != null">`optr_name` = #{optrName}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from srv_merchant_clear where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from srv_merchant_clear where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>